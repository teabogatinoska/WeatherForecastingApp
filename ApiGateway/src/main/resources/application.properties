server.port=8080
spring.application.name=api-service

eureka.client.service-url.defaultZone=http://user:password@registration-service:8761/eureka


spring.security.user.name=user
spring.security.user.password=password


spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

auth.service.url=http://authentication-service
weather.presenter.service.url=http://weather-presenter

spring.data.redis.host=redis-master
spring.data.redis.port=6379


# CORS Configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins[0]=http://34.79.179.228
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins[1]=http://34.79.124.27
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins[2]=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[0]=GET
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[1]=POST
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[2]=PUT
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[3]=DELETE
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[4]=OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders[0]=Authorization
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders[1]=Content-Type
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders[2]=Accept
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true


